apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  labels:
    app: ai-service
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "3004"
    spec:
      containers:
      - name: ai-service
        image: basb/ai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3004
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: basb-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: basb-secrets
              key: MONGODB_URI
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              name: basb-secrets
              key: REDIS_URI
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: basb-secrets
              key: OPENAI_API_KEY
        - name: HUGGINGFACE_API_KEY
          valueFrom:
            secretKeyRef:
              name: basb-secrets
              key: HUGGINGFACE_API_KEY
        - name: KNOWLEDGE_GRAPH_SERVICE_URL
          value: "http://knowledge-graph:3001"
        - name: SEARCH_SERVICE_URL
          value: "http://search:3003"
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: models-cache
          mountPath: /app/models
      volumes:
      - name: logs
        emptyDir: {}
      - name: models-cache
        persistentVolumeClaim:
          claimName: ai-models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  labels:
    app: ai-service
    component: backend
spec:
  selector:
    app: ai-service
  ports:
  - port: 3004
    targetPort: http
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard